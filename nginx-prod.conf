daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
    gzip_comp_level 2;
    gzip on;
    gzip_min_length 512;

    server_tokens off;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Node server proxy
    #
    server {
      listen 3000 ssl default_server;
      server_name localhost;
      include snippets/self-signed.conf;

      location / {
        add_header 'Access-Control-Allow-Origin' 'https://$server_name';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass http://localhost:3001;
      }
    }

    # HTTPS server
    #
    server {
       listen <%= ENV["PORT"] %>;
       server_name _;
       keepalive_timeout 5;

       root public/api;

       location / {
           index  index.php index.html;
           try_files $uri $uri/ $uri.php?$args;
       }

       location /assets {
         root public;
         try_files $uri $uri.svg $uri.png $uri.jpeg;
       }

       location /stylesheets {
           root public;
           try_files $uri $uri/ $uri.css;
       }

       location /scripts {
           root public;
           try_files $uri $uri/ $uri.js;
       }

       #error_page  404              /404.html;

       # redirect server error pages to the static page /50x.html
       #
       error_page   500 502 503 504  /50x.html;
       location = /50x.html {
           root   public;
       }

    }

}
